// chỉ định phiêm bản của protobuf mà ta muốn sử dụng
syntax = "proto3";


// message rỗng dùng để đưa vào những service không cần argument
message Empty {}

// mesage trong protobuf là các thể hiện của các class hoặc object trong các ngôn ngữ lập trình khác
message Film{
    // các số 1 2 3 4 là các số viết theo định dạng của file proto. Do protocol
    // buffer lưu dữ liệu dưới dạng binary nên ta phải định danh các field bằng số này 
    int32 film_id = 1;
    string title = 2;
    string description = 3;
    int32 release_year = 4;
    int32 language_id = 5;
    int32 rental_duration = 6;
    string rental_rate = 7;
    int32 length = 8;
    string replacement_cost = 9;
    string rating = 10;
    string special_features = 11;
}

// ta định nghĩa một film id chỉ chứa một số nguyên là id của film trong data base
message FilmId{
    int32 id = 1;
}
message FilmList {
    // từ khoá repated đóng vai trò là một danh sách (mảng)
   repeated Film film = 1;
}

// định nghĩa một message có chức năng thông báo số dòng bị affect khi thực hiện câu lệnh SQL
message AffectedRows{
    string rows = 1;
}

message FilmWithId{
    int32 film_id = 1;
    string title = 2;
    string description = 3;
    int32 release_year = 4;
    int32 language_id = 5;
    int32 rental_duration = 6;
    string rental_rate = 7;
    int32 length = 8;
    string replacement_cost = 9;
    string rating = 10;
    string special_features = 11;
}

// từ khoá service để định nghĩa một service (một gói hàm)
// service list nhận một message rỗng và trả về list các film
service FilmService {
    rpc List (Empty) returns (FilmList) {};
    rpc Create (Film) returns (AffectedRows) {};
    rpc Get (FilmId) returns (Film) {};
    rpc Update(FilmWithId) returns (AffectedRows) {};
    rpc Delete(FilmId) returns (AffectedRows) {};
}